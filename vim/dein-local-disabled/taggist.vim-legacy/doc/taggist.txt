*taggist.txt*   Plugin for auto-updating the tags and the cscope xref file

Version: 0.1.0

                            TAGGIST USER MANUAL

                                                        *taggist*

Taggist is a simple plugin for automatically update the tags and the cscope
xref file of a project, so as to free people from manually managing the tags
and the cscope xref file.

1. Introduction                 |taggist-intro|
2. Taggist Usage                |taggist-usage|
3. Taggist Commands             |taggist-commands|
4. Taggist Settings             |taggist-settings|
5. Taggist Project File         |taggist-project|
6. About                        |taggist-about|
7. License                      |taggist-license|

==============================================================================
1. Introduction                                         *taggist-intro*

Taggist is a simple plugin for automatically update the tags and the cscope
xref file of a project, so as to free people from manually managing the tags
and the cscope xref file.

Taggist can:

 - read the list of the source files and include directories from a Taggist
   project file;
 - resolve the dependencies of each source file and tag them;
 - update the tags incrementally;
 - update the tags and the cscope cross-reference file periodically at the
   background without user attention.

To use Taggist, you need:

 - Vim version 7.0 or later with |+python| or |+python3| feature, and
   'compatible' is not set.
   {Vi does not have any of there features.}
 - |Exuberant_ctags| (http://ctags.sourceforge.net)
 - |Cscope| (http://cscope.sourceforge.net)

==============================================================================
2. Taggist Usage                                        *taggist-usage*

To use Taggist, simply follow these steps:

   1) Create a Taggist project file in your project's working directory. See
      |taggist-project| about how to write a Taggist project file.
   2) In Vim, cd to your projects working directory, and call the
      |:TaggistStart| command. Now Taggist will start updating the tags and
      the cscope xref file periodically at the background, and add them to
      vim.

==============================================================================
3. Taggist Commands                                     *taggist-commands*

All Taggist commands start with ":Taggist"

                                                        *:TaggistStart*
:TaggistStart [{filename}]
                        Start updating the tags and the cscope xref file of
                        the project specified by {filename}. If {filename} is
                        omitted, Taggist will try ".vim_taggist". If failed,
                        the default project is loaded, which is set by the
                        variable |g:taggist_default_project|. If {filename} is
                        specified, the specified project file will be loaded.
                        After loading the project, the updating of the tags
                        file and the cscope xref file will be started.

                                                        *:TaggistStop*
:TaggistStop            Stop the auto-updating of the tags file and the cscope
                        xref file.

                                                        *:TaggistUpdate*
:TaggistUpdate          Update the tags and the cscope xref file immediately.

==============================================================================
4. Taggist Settings                                     *taggist-settings*

                                                    *taggist-update-interval*
*g:taggist_update_interval*     number (default: 30)

        Adjust the time interval for Taggist to update the tags and the cscope
        xref file.

                                                    *taggist-default-project*
*g:taggist_default_project*     dictionary
        (default:             {'include_dirs': {'c': [], 'c++': []},
                      \        'source_files': {'c':     ['*.c'],
                      \        'c++': ['*.cc', '*.cxx', '*.cpp']},
                      \        'ctags_exe': 'ctags',
                      \        'ctags_args': [],
                      \        'tags_file_name': 'tags',
                      \        'cscope_exe': 'cscope',
                      \        'cscope_args': [],
                      \        'cscope_out_file_name': 'cscope.out'}     )

        The default project as a dictionary. This will be used when
        |:TaggistStart| is called with no argument and there is no
        ".vim_taggist" or "_vim_taggist" in the current directory.

==============================================================================
5. Taggist Project File                                 *taggist-project*

A Taggist project file is a text file who lists the source files, include
directories and other properties of the project. It is simply written as a
python dict. The keys and values of the dict is explained below.

                                                *taggist-include-dirs*
Key                     Value Type

'include_dirs'          {str: [str, ...], ...}
                        default: {'c':   [], 'c++': []}

        A dict of ({language}, {list-of-include-dirs}) pairs. {language} is a
        str object who is the name of the language. {list-of-include-dirs} is
        a list of str objects, who are the include directories of the specific
        language. Globs can be used in the include directories.

                                                *taggist-source-files*
'source_files'          {str: [str, ...], ...}
                        default: {'c':   ['*.c'],
                                  'c++': ['*.cc', '*.cpp', '*.cxx']}

        A dict of ({language}, {list-of-source-files}) pairs. {language} is a
        str object who is the name of the language. {list-of-source-files} is
        a list of str object who are the source files of the specific
        language. Globs can be used in the source files' names.

                                                *taggist-ctags-exe*
'ctags_exe'             str                 default: 'ctags'

        The name of the Exuberant Ctags executable.

                                                *taggist-ctags-args*
'ctags_args'            [str, ...]          default: []

        The arguments being passed to ctags. There are some options that
        cannot be used here, including -a, -R, -e, -f, -I, -L, --options,
        --recurse, --help, --license, --version, --list-kinks,
        --list-languages, --list-maps. If they are used, Taggist may behave
        strangely.

                                                *taggist-tags-file-name*
'tags_file_name'        str                 default: 'tags'

        The name of the tags file.

                                                *taggist-cscope-exe*
'cscope_exe'            str                 default: 'cscope'

        The name of the cscope executable.

                                                *taggist-cscope-args*
'cscope_args'           [str, ...]          default: []

        The arguments being passed to cscope. There are some options that
        cannot be used here, including -b, -I, -f, -i, -h, -V. If they are
        used, Taggist may behave strangely.

                                                *taggist-cscope-out-file-name*
'cscope_out_file_name'  str                 default: 'cscope.out'

        The name of the cscope xref file.

==============================================================================
6. About                                            *taggist-about*

The latest dev version of Taggist can be found at
https://github.com/brglng/taggist.vim

Any one is free to contribute.

==============================================================================
7. License                                          *taggist-license*

Taggist is licensed under the GNU LGPL.
See http://www.gnu.org/copyleft/lesser.html

vim: ft=help tw=78

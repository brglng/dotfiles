if-shell 'type powerline-daemon &>/dev/null' "run-shell 'powerline-daemon -q'"
if-shell '[ -f ~/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf ]' "source '$HOME/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf'"

set-option -g escape-time 50

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 1

# set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

set -g history-limit 100000

if-shell '[ -x /bin/zsh ]' 'set-option -g default-command /bin/zsh'
if-shell '[ -x /usr/bin/zsh ]' 'set-option -g default-command /usr/bin/zsh'
if-shell '[ -x /usr/bin/local/zsh ]' 'set-option -g default-command /usr/bin/local/zsh'
if-shell '[ -x ~/.local/bin/zsh ]' 'set-option -g default-command ~/.local/bin/zsh'
# if-shell '[ "$(uname -s)" = "Darwin" ]' "set-option -g default-command 'reattach-to-user-namespace -l zsh -l'"

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

set -g set-titles on

set-window-option -g automatic-rename on
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{pane_current_command} #[fg=brightblack,nobold,dim]#{?#{==:#{pane_current_path},$HOME},~,#{b:pane_current_path}}#[none]"

setw -g monitor-activity on
# set -g visual-activity off
# set -g bell-action none
# set -g visual-bell off
set-window-option -g window-status-activity-style none

# set first window to index 1 (not 0) to map more to the keyboard layout
set-option -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

set-window-option -g xterm-keys on
set-option -g prefix C-a
bind C-a send-prefix

####

# new window at current directory
bind s split-window -c "#{pane_current_path}"
bind ^s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind ^c new-window -c "#{pane_current_path}"
bind ^r source-file ~/.tmux.conf \; display "Configuration reloaded!"

# set -g pane-border-status top
set -g pane-border-format " #{pane_index} #[bold]#{pane_current_command} #[nobold,dim]#{s|$HOME|~:pane_current_path}#[none] "
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'
set-hook -g 'after-resize-pane'  "if-shell -F '#{||:#{==:#{window_panes},1},#{window_zoomed_flag}}' 'set -g pane-border-status off' 'set -g pane-border-status bottom'"

#### MOUSE

set-option -g mouse on

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -d -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

#### Plugins

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'odedlaz/tmux-onedark-theme'

# set -g @onedark_date_format "%Y/%m/%d"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
run '~/.tmux/plugins/tpm/bin/install_plugins'
